(()=>{"use strict";var t={249:t=>{t.exports=require("eslint")},265:function(t,e,r){var o,n=this&&this.__createBinding||(Object.create?function(t,e,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(e,r);n&&!("get"in n?!e.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,o,n)}:function(t,e,r,o){void 0===o&&(o=r),t[o]=e[r]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),s=this&&this.__importStar||(o=function(t){return o=Object.getOwnPropertyNames||function(t){var e=[];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[e.length]=r);return e},o(t)},function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r=o(t),s=0;s<r.length;s++)"default"!==r[s]&&n(e,t,r[s]);return i(e,t),e});Object.defineProperty(e,"__esModule",{value:!0}),e.activate=function(t){console.log("SyntaxilitY Code Formatter is now active!");try{const e=a.workspace.getConfiguration("syntaxilityCodeFormatter"),r=e.get("formatters",{})||{},o=e.get("preCommitHook",!0);let n=a.commands.registerCommand("syntaxilityCodeFormatter.formatDocument",(async()=>{try{const t=a.window.activeTextEditor;if(!t)return void a.window.showErrorMessage("No active editor found!");const{document:e,selections:o}=t,n=e.getText(),i=e.languageId,s=a.workspace.rootPath||"";let f=n,g=r[i]||function(t){return{javascript:"prettier",typescript:"eslint",python:"black",cpp:"clang-format",go:"gofmt",rust:"rustfmt",java:"google-java-format",sql:"sql-formatter",yaml:"prettier",markdown:"markdown-it"}[t]||"prettier"}(i);if(w(g)||(a.window.showWarningMessage(`Formatter "${g}" not found. Using fallback: Prettier.`),g="prettier"),"prettier"===g){if(!w("prettier"))return void a.window.showErrorMessage("Prettier is not installed! Install it using `npm install -g prettier`.");const t=m.join(s,".prettierrc.json"),e=l.existsSync(t)?JSON.parse(l.readFileSync(t,"utf8")):{parser:p(i)};f=await c.format(n,e)}if("eslint"===g){if(!w("eslint"))return void a.window.showErrorMessage("ESLint is not installed! Install it using `npm install -g eslint`.");const t=new u.ESLint({fix:!0}),e=await t.lintText(f);f=e[0].output||f}f=function(t,e){try{return(0,d.execSync)(t,{input:e,encoding:"utf8"})}catch(r){return a.window.showErrorMessage(`Error running formatter ${t}: ${r.message}`),e}}(g,f),t.edit((t=>{o.forEach((r=>{t.replace(r.isEmpty?new a.Range(0,0,e.lineCount,0):r,f)}))})),a.window.showInformationMessage(`Formatted with ${g}!`)}catch(t){a.window.showErrorMessage(`Formatting failed: ${t.message}`)}}));a.workspace.onWillSaveTextDocument((t=>{e.get("autoFormatOnSave",!0)&&a.commands.executeCommand("syntaxilityCodeFormatter.formatDocument")})),o&&function(){try{const t=a.workspace.rootPath;if(!t)return;const e=m.join(t,".git","hooks","pre-commit");if(l.existsSync(e))return;const r='#!/bin/sh\n    echo "Running SyntaxilitY Code Formatter before commit..."\n    npx syntaxility-code-formatter || echo "Formatting failed, skipping commit."\n    git add .\n    ';l.writeFileSync(e,r),l.chmodSync(e,"755"),a.window.showInformationMessage("Git pre-commit hook installed for auto-formatting.")}catch(t){a.window.showErrorMessage(`Failed to set up Git pre-commit hook: ${t.message}`)}}(),t.subscriptions.push(n)}catch(t){a.window.showErrorMessage(`Extension activation failed: ${t.message}`)}},e.deactivate=function(){};const a=s(r(398)),c=s(r(459)),u=r(249),l=s(r(896)),m=s(r(928)),d=r(317),f=s(r(857));function p(t){switch(t){case"javascript":case"typescript":default:return"babel";case"json":return"json";case"html":return"html";case"css":case"scss":case"less":return"css";case"yaml":return"yaml";case"markdown":return"markdown"}}function w(t){try{const e="win32"===f.platform()?`where ${t}`:`which ${t}`;return(0,d.execSync)(e,{stdio:"ignore"}),!0}catch{return!1}}},317:t=>{t.exports=require("child_process")},398:t=>{t.exports=require("vscode")},459:t=>{t.exports=require("prettier")},857:t=>{t.exports=require("os")},896:t=>{t.exports=require("fs")},928:t=>{t.exports=require("path")}},e={},r=function r(o){var n=e[o];if(void 0!==n)return n.exports;var i=e[o]={exports:{}};return t[o].call(i.exports,i,i.exports,r),i.exports}(265);module.exports=r})();